apiVersion: kubevirt.io/v1
kind: VirtualMachine
metadata:
  labels:
    kubevirt.io/vm: ubuntu-rwx-ovs
  name: ubuntu-rwx-ovs
  namespace: ${NAMESPACE}
spec:
  dataVolumeTemplates:
  - metadata:
      name: ubuntu-rwx-ovs-1-dv
    spec:
      pvc:
        accessModes:
        - ReadWriteMany
        resources:
          requests:
            storage: 10G
        storageClassName: ${STORAGE_CLASS_NAME}
      source:
        http:
          url: http://ubuntu.mirrors.tds.net/ubuntu-cloud-images/releases/20.04/release/ubuntu-20.04-server-cloudimg-amd64.img
  running: true
  template:
    metadata:
      labels:
        kubevirt.io/vm: ubuntu-rwx-ovs
    spec:
      domain:
        cpu:
          cores: 1
        devices:
          disks:
          - disk:
              bus: virtio
            name: datavolumevolume
          - disk:
              bus: virtio
            name: cloudinit
          interfaces:
          - name: ovs-ipam-net1
            bridge: {}
            ports:
              - port: 22
              - port: 80
              - port: 443
          - name: default
            masquerade: {}
        machine:
          type: ""
        resources:
          requests:
            memory: 2G
      terminationGracePeriodSeconds: 0
      networks:
      - name: ovs-ipam-net1
        multus:
          networkName: ovs-ipam-net
      - name: default
        pod: {}
      volumes:
      - dataVolume:
          name: ubuntu-rwx-ovs-1-dv
        name: datavolumevolume
      - cloudInitNoCloud:
          networkData: |-
            version: 2
            ethernets:
              enp1s0:
                dhcp4: true
                routes:
                  - to: 0.0.0.0/0
                    via: ${WHEREABOUTS_GATEWAY}
                    table: 200
                  - to: ${WHEREABOUTS_NET_RANGE}
                    via: ${WHEREABOUTS_GATEWAY}
                    table: 200
                routing-policy:
                  - from: ${WHEREABOUTS_NET_RANGE}
                    table: 200
                    priority: 100
              enp2s0:
                dhcp4: true
          userData: |-
            #cloud-config
            password: ubuntu
            ssh_pwauth: True
            manage_etc_hosts: true
            chpasswd: { expire: False }
            ssh_authorized_keys:
              - ${PUB_SSH_KEY}
        name: cloudinit
